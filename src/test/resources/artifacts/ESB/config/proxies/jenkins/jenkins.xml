<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="jenkins" transports="https,http"
       statistics="disable" trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="username" expression="//username/text()"/>
            <property name="apiUrl" expression="//apiUrl/text()"/>
            <property name="port" expression="//port/text()"/>
            <property name="password" expression="//password/text()"/>
            <property name="jobName" expression="//jobName/text()"/>
            <property name="configDetails" expression="//configDetails"/>
            <property name="name" expression="//name/text()"/>
            <property name="responseType" expression="//responseType/text()"/>
            <property name="buildValue" expression="//buildValue/text()"/>
            <property name="tree" expression="//tree/text()"/>
            <property name="isBuildWithParameters" expression="//isBuildWithParameters/text()"/>
            <property name="parameters" expression="//parameters/text()"/>
            <filter xpath="(get-property('transport','Action')='urn:createJobWithConfigFile') or (get-property('transport','Action')='urn:updateJobConfigurationWithConfigFile')">
                <then>
                    <jenkins.init>
                        <username>{$url:username}</username>
                        <apiUrl>{$url:apiUrl}</apiUrl>
                        <port>{$ctx:port}</port>
                        <password>{$url:password}</password>
                    </jenkins.init>
                </then>
                <else>
                    <jenkins.init>
                        <username>{$ctx:username}</username>
                        <apiUrl>{$ctx:apiUrl}</apiUrl>
                        <port>{$ctx:port}</port>
                        <password>{$ctx:password}</password>
                    </jenkins.init>
                </else>
            </filter>
            <switch source="get-property('transport','Action')">
                <case regex="urn:getJobConfiguration">
                    <jenkins.getJobConfiguration>
                        <jobName>{$ctx:jobName}</jobName>
                    </jenkins.getJobConfiguration>
                </case>
                <case regex="urn:createJob">
                    <jenkins.createJob>
                        <configDetails>{$ctx:configDetails}</configDetails>
                        <name>{$ctx:name}</name>
                    </jenkins.createJob>
                </case>
                <case regex="urn:createJobWithConfigFile">
                    <jenkins.createJobWithConfigFile>
                        <name>{$url:name}</name>
                    </jenkins.createJobWithConfigFile>
                </case>
                <case regex="urn:updateJobConfiguration">
                    <jenkins.updateJobConfiguration>
                        <configDetails>{$ctx:configDetails}</configDetails>
                        <jobName>{$ctx:jobName}</jobName>
                    </jenkins.updateJobConfiguration>
                </case>
                <case regex="urn:updateJobConfigurationWithConfigFile">
                    <jenkins.updateJobConfigurationWithConfigFile>
                        <jobName>{$url:jobName}</jobName>
                    </jenkins.updateJobConfigurationWithConfigFile>
                </case>
                <case regex="urn:listJobs">
                    <jenkins.listJobs>
                        <responseType>{$ctx:responseType}</responseType>
                    </jenkins.listJobs>
                </case>
                <case regex="urn:getBuildDetails">
                    <jenkins.getBuildDetails>
                        <tree>{$ctx:tree}</tree>
                        <buildValue>{$ctx:buildValue}</buildValue>
                        <responseType>{$ctx:responseType}</responseType>
                        <jobName>{$ctx:jobName}</jobName>
                    </jenkins.getBuildDetails>
                </case>
                <case regex="urn:createBuild">
                    <jenkins.createBuild>
                        <isBuildWithParameters>{$ctx:isBuildWithParameters}</isBuildWithParameters>
                        <responseType>{$ctx:responseType}</responseType>
                        <parameters>{$ctx:parameters}</parameters>
                        <jobName>{$ctx:jobName}</jobName>
                    </jenkins.createBuild>
                </case>
                <case regex="urn:getJob">
                    <jenkins.getJob>
                        <responseType>{$ctx:responseType}</responseType>
                        <jobName>{$ctx:jobName}</jobName>
                    </jenkins.getJob>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                